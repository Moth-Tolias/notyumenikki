<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_default</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set variables
IncrementChar = true; //automatically draw the next character every step
IncrementSpeed = 1;   //how fast to talk [float]
CharacterLimit = 0;   //what the current maximum character's position is

//text selection
DialogueTree = 0;   //where we are in the dialog tree [binary]
DialogueTreeCounter = 0; //how many choices we have made in the tree
CurrentLine = 0; //the current line of dialogue

//input
AcceptingInput = false; //waiting for the user to go to the next line
Input = -1; //nyi???---------
MyInputBox = noone; //repurpose this---------
WaitingForQuery = false; //waiting for the user to answer a question
QueryChoice = true; //what the cursor is hovering over in the question
QueryResult = -1; //unused?------

//creation code
//StringToParse[0,0] = "a string"; //the current text to parse and display
//MyCaller = self; //who to inform that the text has been read


//control codes
CCodesActive = false; //if control codes are being parsed 
ControlCode = "";     //the current control code to match
Setter = 0;           //control code selection variable
SetterTarget = settertargets.outofbounds; //


//constants [well, sort of]
//font sizes
FontSize_Default = 8;
FontSize_Small = 8;
FontSize_Big = 16;
NewlineSize = 12;
//text offsets
TextOffsetX = 16;
TextOffsetY = 64;


//drawing
//these are both only used in the draw event but GMS 
//won't let me edit local vars from within scripts =[
StringWidth = 0; //how far along the current character that is being drawn is
LineToDraw = 0;  //the current line of the line of text that is being draw
//avatar
UseAvatar = false;
AvatarToDraw = spr_default;
//textbox
//TextboxPosition = 0;
TextBoxHeight = sprite_get_height(spr_textbox);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///increment charlimit and get input
if ((IncrementChar == true) and (CharacterLimit &lt;= string_length(StringToParse[DialogueTree,CurrentLine]))) {
    CharacterLimit += IncrementSpeed;
    }

///go to the next line, if the player has incremented the text
if AcceptingInput { //if we are displaying a [next] arrow
    scr_get_input(true); //don't get input if we don't need to
    if WaitingForQuery {
        if PressedKeyU { QueryChoice = true; }
        if PressedKeyD { QueryChoice = false; }
        if (PressedKeyA or PressedKeyS) {
            scr_update_dialoguepath(QueryChoice);
            WaitingForQuery = false;
            }
        }
    
    if (PressedKeyA or PressedKeyS) {
        scr_get_next_line(); //proceed to the next string
        //we are no longer waiting for the user to press the button
        AcceptingInput = false;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw box and text
var i, CharToDraw, StringToDraw;
i = 1;
StringToDraw = StringToParse[DialogueTree,CurrentLine];
StringWidth = 0; //these are both only used here but GMS won't let 
LineToDraw = 0;  //me edit local vars from within scripts!!!! &gt;=[

//box
draw_sprite(spr_textbox, 0, view_xview[0], ((view_yview[0] + view_hview[0]) - TextBoxHeight));

//text
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_colour(c_black); //default colour

while i &lt; floor(CharacterLimit) {
    CharToDraw = string_char_at(StringToDraw,i);
    i += 1;
    
    if CCodesActive == false {
        if CharToDraw == "[" {
            CCodesActive = true;
            } 
        else { scr_draw_char(CharToDraw); }
        }
         
    if CCodesActive == true {
        ControlCode += CharToDraw;
        scr_parse_ccode(ControlCode);
        while (i &gt;= floor(CharacterLimit)) {
            CharacterLimit += 1;
            }
        }
    }

//draw avatar
if (UseAvatar == true) {
    draw_sprite(AvatarToDraw, 0, view_xview[0], ((view_yview + view_hview[0]) - (TextBoxHeight + AVATARSIZE)));
    }

if (WaitingForQuery == true) {
    draw_sprite(spr_querybox,0, (view_xview[0] + (320-64)), ((view_yview + view_hview[0]) - (TextBoxHeight + 64)));
    draw_sprite_ext(spr_adv_text, 0, (view_xview[0] + (320-64)), (((view_yview + view_hview[0]) - (TextBoxHeight + 32)) - (16 * QueryChoice)), 1,1,90,c_white,1);
    }
    
//draw indicator
if (AcceptingInput = true) {
    draw_sprite(spr_adv_text, 0, (view_xview[0] + 304), ((view_yview + view_hview[0]) - (16)));
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///go on
if (textbox_position == 0) and (textbox_rise == false) {
    textbox_rise = true;
}

if accepting_input == true {
    increment_char = true;
    }

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
