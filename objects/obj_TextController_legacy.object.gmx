<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_default</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set variables
increment_char = false;
accepting_input = false;

textbox_position = 0;
textbox_target = sprite_get_height(spr_textbox);

use_avatar = false;
avatar = spr_default;
avatar_size = 48;


controlcodesactive = false;
controlcode = "";

font_size_default = 12;//bad
font_size_small = 8;//
font_size_big = 16;//

newline_size = 12; //change this
text_xoffset = 16;
text_yoffset = (view_hport[0]-64);

character_limit = 0;
string_to_draw = "[avatarsu]nya!!... did you you know[newline]that [red]game dev is fun[black]?[newline]you can do [red]cool stuff[newline]like this";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rise box and increment charlimit 
if textbox_position != textbox_target {
    textbox_position += 4; //change to accelerate maybe?
    if textbox_position &gt;= textbox_target {
        textbox_position = textbox_target;
        increment_char = true;
        }
    } 
    
if increment_char == true {
    character_limit += 1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw box and text
/*while char_to_draw &lt;= character_limit:
    if character is a control character:
        do a control thing
    else:
        draw it
    increase char_to_draw

character_limit +=1
*/
var i, char_to_draw, stringWidth, line_to_draw;
i = 1;
stringWidth = 0;
line_to_draw = 0;

draw_text(0,0,controlcode)

//box
draw_sprite(spr_textbox, 0, view_xview[0], (view_hport[0] - textbox_position));

//text
draw_set_colour(c_black); //default colour

while i &lt; character_limit {
    char_to_draw = string_char_at(string_to_draw,i);
    i += 1;
    
    if controlcodesactive == false {
        if char_to_draw == "[" {
            controlcodesactive = true;
            } 
            else {
                draw_text(stringWidth + text_xoffset, text_yoffset + (line_to_draw * newline_size), char_to_draw);
                stringWidth += font_size_default;//remember to change this eventually
                }
        }
         
    if controlcodesactive == true {
        controlcode += char_to_draw;
        switch (controlcode) {
            case "[avatarsu]": use_avatar = true; scr_reset_ccodes(); break;
            case "[red]": draw_set_colour(c_red); scr_reset_ccodes(); break;
            case "[black]": draw_set_colour(c_black); scr_reset_ccodes(); break;
            case "[newline]": line_to_draw += 1; stringWidth = 0; scr_reset_ccodes(); break;
            default: while (i &gt;= character_limit) {
            character_limit += 1;
                }
            }
        }
    }

//draw avatar
if (use_avatar == true) and (textbox_position == textbox_target) {
    draw_sprite(spr_av_su, 0, view_xview[0], (view_hport[0] - (textbox_target + avatar_size)));
    }

//debug
draw_text(0,0,controlcode)
//scr_reset_ccodes()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///go on
if (textbox_position == 0) and (textbox_rise == false) {
    textbox_rise = true;
}

if accepting_input == true {
    increment_char = true;
    }

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_restart()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
